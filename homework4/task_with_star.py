# Задача со ЗВЁЗДОЧКОЙ. Решать НЕ обязательно.
# Программа получает на вход натуральное число num.
# Программа должна вывести другое натуральное число, удовлетворяющее условиям:
# Новое число должно отличаться от данного ровно одной цифрой
# Новое число должно столько же знаков как исходное
# Новое число должно делиться на 3
# Новое число должно быть максимально возможным из всех таких чисел
# Например (Ввод --> Вывод) :
#
# 379 --> 879
# 15 --> 75
# 4974 --> 7974

def max_division_by_3(num):
    """
    Вывести натуральное число, которое от данного ровно одной цифрой, имеет столько же знаков как исходное, делится на 3, максимально возможное из всех таких чисел
    :param num: Натуральное число
    :return: (new_num) Натуральное число удовлетворяющее тредобваниям
    """
    a = 0
    num = [int(m) for m in str(num)]  # Разбиваем число на цифры
    new_num = []
    new_num_1 = []
    all_number = [int(k) for k in range(10)]  # Лист с числами от 0 до 9
    for m in range(len(num)):  # Количество знаков в числе
        for j in all_number:  # Перебираем все числа от 0 до 9 для составления всех возможных чисел / j - изменяемый знак
            a = int((''.join(map(str, num[:m]))) + str(j) + (''.join(map(str, num[m + 1:])))) # Берем изменяемую цифру и добавляем в список все возможные комбинации
            new_num_1.append(a)  # Возможные комбинации
    for z in new_num_1:
        if (int(z) % 3 == 0):
            new_num.append(z)

    new_num = max(new_num)
    return new_num

# Ниже НИЧЕГО НЕ НАДО ИЗМЕНЯТЬ


data = [
    379, 810, 981, 4974, 996, 9000, 15, 0, 9881, 9984, 9876543210, 98795432109879543210
]

test_data = [
    879, 870, 987, 7974, 999, 9900, 75, 9, 9981, 9987, 9879543210, 98798432109879543210
]


for i, d in enumerate(data):
    assert max_division_by_3(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')
